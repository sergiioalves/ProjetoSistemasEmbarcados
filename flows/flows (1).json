[
    {
        "id": "67fd04818aa60d19",
        "type": "tab",
        "label": "MQTT -> MongoDB (chuva)",
        "disabled": false,
        "info": "Fluxo: recebe esp32/sensorChuva (digital) e esp32/sensorChuva/analog (anal√≥gico) e insere documentos em EstacaoMeteorologica.chuva"
    },
    {
        "id": "d90e67094c57b562",
        "type": "mqtt in",
        "z": "67fd04818aa60d19",
        "name": "Analog In (esp32/sensorChuva/analog)",
        "topic": "esp32/sensorChuva/analog",
        "qos": "0",
        "datatype": "auto",
        "broker": "dfb4e51f59f1317e",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 180,
        "y": 120,
        "wires": [
            [
                "8add696e4284f4e5"
            ]
        ]
    },
    {
        "id": "8add696e4284f4e5",
        "type": "function",
        "z": "67fd04818aa60d19",
        "name": "storeAnalog (salva em flow)",
        "func": "let v = msg.payload;\nif (typeof v === 'string') { v = v.trim(); v = Number(v); }\nif (isNaN(v)) { return null; }\nflow.set('analogico', v);\nreturn null;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4f28c9518f5ed59c",
        "type": "mqtt in",
        "z": "67fd04818aa60d19",
        "name": "Digital In (esp32/sensorChuva)",
        "topic": "esp32/sensorChuva",
        "qos": "0",
        "datatype": "auto",
        "broker": "dfb4e51f59f1317e",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 160,
        "y": 240,
        "wires": [
            [
                "0ab077580805628b"
            ]
        ]
    },
    {
        "id": "0ab077580805628b",
        "type": "function",
        "z": "67fd04818aa60d19",
        "name": "buildDocAndInsert",
        "func": "let estado = (typeof msg.payload === 'string') ? msg.payload.trim() : String(msg.payload);\nlet analogico = flow.get('analogico') || null;\nif (analogico !== null && (isNaN(analogico) || analogico < 0)) { analogico = null; }\n\nlet intensidades = {\n    \"seco\": \"seco\",\n    \"leve\": \"leve\",\n    \"moderada\": \"moderada\",\n    \"forte\": \"forte\"\n};\n\nlet intensidade = intensidades[estado.toLowerCase()] || \"desconhecido\";\n\nlet doc = {\n    sensor: \"YL-83\",\n    analogico: analogico,\n    intensidade: intensidade,\n    data: new Date().toISOString()\n};\n\nmsg.payload = doc;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 240,
        "wires": [
            [
                "87188f3153ad9b7c"
            ]
        ]
    },
    {
        "id": "87188f3153ad9b7c",
        "type": "mongodb out",
        "z": "67fd04818aa60d19",
        "mongodb": "mongodb_config",
        "name": "MongoDB Insert (chuva)",
        "collection": "chuva",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 640,
        "y": 240,
        "wires": []
    },
    {
        "id": "03f96df45acc9581",
        "type": "debug",
        "z": "67fd04818aa60d19",
        "name": "MongoDB Debug (payload)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 880,
        "y": 240,
        "wires": []
    },
    {
        "id": "dfb4e51f59f1317e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt://broker.hivemq.com",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "mongodb_config",
        "type": "mongodb",
        "hostname": "localhost",
        "connectOptions": "",
        "port": "27017",
        "db": "EstacaoMeteorologica",
        "name": "Local MongoDB (configurar)"
    },
    {
        "id": "87922630fed5fab6",
        "type": "global-config",
        "env": [],
        "modules": {
            "node-red-node-mongodb": "0.2.5"
        }
    }
]